version: 2.1

executors:
  default:
    docker:
      - image: us-docker.pkg.dev/oplabs-tools-artifacts/images/ci-builder:v0.55.0

orbs:
  go: circleci/go@2.2.3
  utils: ethereum-optimism/circleci-utils@0.0.12

commands:
  # By default, CircleCI does not checkout any submodules
  # 
  # In our case, we need to checkout the submodules recursively
  # (since e.g. optimism has its own submodules)
  checkout-with-submodules:
    steps:
      - checkout
      - run: 
          name: Sync submodules
          command: git submodule sync
      - run: 
          name: Initialize submodules
          command: git submodule update --init --recursive
  
  install-golangci-lint:
    parameters:
      version:
        type: string
        default: v1.63.4
    steps:
      - run:
          name: Setup golangci-lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin << parameters.version >>

  install-goreleaser:
    parameters:
      version:
        type: string
        default: "2.5.1"
    steps:
      - run:
          name: Install GoReleaser
          command: |
            echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | tee /etc/apt/sources.list.d/goreleaser.list
            apt -q update -y
            apt -q install -y --no-install-recommends goreleaser=<< parameters.version >>
      - run:
          name: Output GoReleaser version
          command: goreleaser --version

  install-go-modules:
    steps:
      - go/load-mod-cache # Load cached Go modules.
      - go/mod-download # Run 'go mod download'.
      - go/save-mod-cache # Save Go modules to cache.

jobs:
  check-versions-monorepo:
    executor: default
    steps:
      - checkout-with-submodules
      - run:
          name: Check versions
          command: just check-monorepo-versions

  contracts-tests:
    executor: default
    environment:
      FOUNDRY_PROFILE: ci
    steps:
      - checkout-with-submodules
      - run:
          name: Run Forge build
          command: just build-contracts
      - run:
          name: Run Forge tests
          command: just test-contracts

  go-lint:
    executor: default
    steps:
      - checkout-with-submodules
      - install-go-modules
      - install-golangci-lint
      - run:
          name: Run linter
          command: just lint-go

  go-tests:
    executor: default
    steps:
      - checkout-with-submodules
      - install-go-modules
      - run:
          # We need to "rename" some of the variables coming from the CircleCI context
          # to match what supersim expects
          name: Setup environment variables
          command: |
            echo "export SUPERSIM_RPC_URL_OP=$RPC_URL_OP_MAINNET" >> $BASH_ENV
            echo "export SUPERSIM_RPC_URL_BASE=$RPC_URL_BASE_MAINNET" >> $BASH_ENV
      - run:
          name: Run tests
          command: just test-go
          no_output_timeout: 20m
    
  go-release:
    executor: default
    steps:
      - checkout-with-submodules
      - install-goreleaser
      - install-go-modules
      - utils/get-github-access-token:
          # GoReleaser expects a GITHUB_TOKEN environment variable to be set
          output-token-name: GITHUB_TOKEN
      - run:
          name: Run GoReleaser
          command: goreleaser release --clean

workflows:
  main:
    jobs:
      - check-versions-monorepo
      - contracts-tests
      - go-lint
      - go-tests:
          context:
            - oplabs-rpc-urls
  release:
    jobs:
      - go-release:
          context:
            - circleci-repo-supersim
          filters: 
            tags:
              only: 
                - /^v?\d+\.\d+\.\d+.*?/
            # Without explicitly ignoring all branches, CircleCI will run the job on all branches
            # even if no tags have been pushed
            branches:
              ignore: /.*/
